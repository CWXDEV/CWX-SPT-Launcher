@inject ISnackbar Snackbar

<MudDialog Class="pt-4 pb-2">
    <DialogContent>
        <MudForm Model="Server" @bind-IsValid="@success" Class="gap-2 mt-3">
            <MudTextField Immediate="true" @bind-Value="Server.Name" Label="Name" Variant="Variant.Outlined" Margin="Margin.Dense"/>
            <MudTextField Immediate="true" @bind-Value="Server.Ip" Label="IP" Required="true" RequiredError="IP is required!" Variant="Variant.Outlined" Margin="Margin.Dense"/>
            @* <MudTextField Immediate="true" @bind-Value="Server.ServerId" Label="ID" Variant="Variant.Outlined" Margin="Margin.Dense"/> *@
            @* <MudTextField Immediate="true" @bind-Value="Server.Password" Label="Password" Variant="Variant.Outlined" Margin="Margin.Dense"/> *@
            @* <MudSwitch @bind-Value="Server.RemoteServer" Label="IsLocal" ThumbIcon="@(Server.RemoteServer ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(Server.RemoteServer ? Color.Success : Color.Error)"/> *@
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto" @onclick="() => Submit()">Confirm</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Default" @onclick="() => Cancel()">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private bool success;
    private IMask ipPortMask = RegexMask.IPv4(true);
    [Parameter]
    public ServersClass Server { get; set; }
    
    [CascadingParameter] 
    private MudDialogInstance MudDialog { get; set; }

    private async void Submit()
    {
        MudDialog.Close(DialogResult.Ok(Server));
        Snackbar.Add("Edited Server!", Severity.Success);
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}