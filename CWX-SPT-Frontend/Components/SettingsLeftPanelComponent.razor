<MudItem sm="6">
    <MudPaper Class="pa-5 mr-1 gap-2 d-flex flex-column card-overflow" Elevation="3">
        <MudContainer Class="pa-0">
            <a class="d-flex justify-center align-center cursor-pointer setting-on-hover py-2 pl-5" @onclick="SetCloseToTray">
                <MudText Class="no-select">Close to tray</MudText>
                <MudSpacer/>
                <MudSwitch @bind-Value="closeToTraySwitch" Color="Color.Tertiary" Class="pr-0"/>
            </a>
        </MudContainer>
        <MudDivider DividerType="DividerType.Middle" Class="ma-0"/>
        <MudContainer Class="pa-0">
            <a class="d-flex justify-center align-center cursor-pointer setting-on-hover py-2 pl-5" @onclick="SetMinimizeOnLaunch">
                <MudText Class="no-select">Minimize on game start</MudText>
                <MudSpacer/>
                <MudSwitch @bind-Value="minimizeOnLaunchSwitch" Color="Color.Tertiary" Class="pr-0"/>
            </a>
        </MudContainer>
        <MudDivider DividerType="DividerType.Middle" Class="ma-0"/>
        <MudContainer Class="pa-0">
            <a class="d-flex justify-center align-center cursor-pointer setting-on-hover py-2 pl-5" @onclick="SetAlwaysOnTop">
                <MudText Class="no-select">Always on top</MudText>
                <MudSpacer/>
                <MudSwitch @bind-Value="alwaysOnTopSwitch" Color="Color.Tertiary" Class="pr-0"/>
            </a>
        </MudContainer>
        <MudDivider DividerType="DividerType.Middle" Class="ma-0"/>
        <MudContainer Class="pa-0">
            <a class="d-flex justify-center align-center cursor-pointer setting-on-hover py-2 pl-5" @onclick="SetUseProfileColors">
                <MudText Class="no-select">Use Profile Colors</MudText>
                <MudSpacer/>
                <MudSwitch @bind-Value="useProfileColors" Color="Color.Tertiary" Class="pr-0"/>
            </a>
        </MudContainer>
    </MudPaper>
</MudItem>

@code
{
    private bool closeToTraySwitch { get; set; } = SettingsHelper.Instance.GetSettings().AppSettings.CloseToTray;
    private bool minimizeOnLaunchSwitch { get; set; } = SettingsHelper.Instance.GetSettings().AppSettings.MinimizeOnLaunch;
    private bool alwaysOnTopSwitch { get; set; } = SettingsHelper.Instance.GetSettings().AppSettings.AlwaysTop;
    private bool useProfileColors { get; set; } = SettingsHelper.Instance.GetSettings().AppSettings.UseProfileColors;

    private void SetCloseToTray()
    {
        closeToTraySwitch = !closeToTraySwitch;
        SettingsHelper.Instance.SetCloseToTray(closeToTraySwitch);
    }

    private void SetMinimizeOnLaunch()
    {
        minimizeOnLaunchSwitch = !minimizeOnLaunchSwitch;
        SettingsHelper.Instance.SetMinimizeOnLaunch(minimizeOnLaunchSwitch);
    }

    private void SetAlwaysOnTop()
    {
        alwaysOnTopSwitch = !alwaysOnTopSwitch;
        SettingsHelper.Instance.SetAlwaysOnTop(alwaysOnTopSwitch);
    }

    private void SetUseProfileColors()
    {
        useProfileColors = !useProfileColors;
        SettingsHelper.Instance.SetUseProfileColors(useProfileColors);
    }
}